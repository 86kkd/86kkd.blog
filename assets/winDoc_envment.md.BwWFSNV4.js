import{_ as n,c as r,j as e,a,a2 as i,o}from"./chunks/framework.C3rjE0BJ.js";const $=JSON.parse('{"title":"获取当前路径字符串","description":"","frontmatter":{},"headers":[],"relativePath":"winDoc/envment.md","filePath":"winDoc/envment.md","lastUpdated":1732181365000}'),s={name:"winDoc/envment.md"};function l(c,t,h,m,d,p){return o(),r("div",null,t[0]||(t[0]=[e("h1",{id:"获取当前路径字符串",tabindex:"-1"},[a("获取当前路径字符串 "),e("a",{class:"header-anchor",href:"#获取当前路径字符串","aria-label":'Permalink to "获取当前路径字符串"'},"​")],-1),e("p",null,"$paths = @( 'C:\\Windows\\system32', 'C:\\Windows', 'C:\\Windows\\System32\\Wbem', 'C:\\Windows\\System32\\WindowsPowerShell\\v1.0', 'C:\\Program Files', 'C:\\Program Files (x86)', 'C:\\Program Files\\Common Files', 'C:\\DLL\\ncnn-20220216-windows-vs2019\\x64\\bin', 'C:\\pnnx\\ncnn-pnnx\\tools\\pnnx\\build\\install\\bin', 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current\\Bin', 'C:\\Scoop\\shims', 'C:\\Users\\yview\\AppData\\Local\\Microsoft\\WindowsApps', 'C:\\Program Files\\Wireshark', 'C:\\gstreamer\\1.0\\msvc_x86_64\\bin' )",-1),e("h1",{id:"去重并过滤空值",tabindex:"-1"},[a("去重并过滤空值 "),e("a",{class:"header-anchor",href:"#去重并过滤空值","aria-label":'Permalink to "去重并过滤空值"'},"​")],-1),e("p",{$_:"","-and":"","$_.Trim()":""},"$uniquePaths = $paths | Select-Object -Unique | Where-Object",-1),i('<h1 id="合并为新的路径字符串" tabindex="-1">合并为新的路径字符串 <a class="header-anchor" href="#合并为新的路径字符串" aria-label="Permalink to &quot;合并为新的路径字符串&quot;">​</a></h1><p>$newPath = $uniquePaths -join &#39;;&#39;</p><h1 id="设置新的环境变量" tabindex="-1">设置新的环境变量 <a class="header-anchor" href="#设置新的环境变量" aria-label="Permalink to &quot;设置新的环境变量&quot;">​</a></h1><p>[Environment]::SetEnvironmentVariable(&#39;Path&#39;, $newPath, &#39;Machine&#39;)</p><h1 id="显示更新后的环境变量-格式化输出" tabindex="-1">显示更新后的环境变量（格式化输出） <a class="header-anchor" href="#显示更新后的环境变量-格式化输出" aria-label="Permalink to &quot;显示更新后的环境变量（格式化输出）&quot;">​</a></h1>',5),e("p",{$_:""},[a('Write-Host "更新后的环境变量（按类别分组）：" Write-Host "`n系统核心路径：" $paths | Where-Object { $_ -like "'),e("em",null,"Windows"),a('" } | ForEach-Object')],-1),e("p",{$_:""},[a('Write-Host "`n程序文件路径：" $paths | Where-Object { $_ -like "'),e("em",null,"Program Files"),a('" } | ForEach-Object')],-1),e("p",{$_:""},[a('Write-Host "`n开发工具路径：" $paths | Where-Object { $_ -like "'),e("em",null,"Visual Studio"),a('" -or $_ -like "'),e("em",null,"DLL"),a('" -or $_ -like "'),e("em",null,"pnnx"),a('" -or $_ -like "'),e("em",null,"gstreamer"),a('" } | ForEach-Object')],-1),e("p",{$_:""},[a('Write-Host "`n用户应用路径：" $paths | Where-Object { $_ -like "'),e("em",null,"Users"),a('" -or $_ -like "'),e("em",null,"Scoop"),a('" -or $_ -like "'),e("em",null,"Wireshark"),a('" } | ForEach-Object')],-1)]))}const b=n(s,[["render",l]]);export{$ as __pageData,b as default};
