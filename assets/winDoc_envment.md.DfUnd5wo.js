import{_ as n,c as r,j as e,a as t,a2 as i,o}from"./chunks/framework.C3rjE0BJ.js";const v=JSON.parse('{"title":"Get the current path string","description":"","frontmatter":{},"headers":[],"relativePath":"winDoc/envment.md","filePath":"winDoc/envment.md","lastUpdated":1732523996000}'),l={name:"winDoc/envment.md"};function s(h,a,p,m,u,c){return o(),r("div",null,a[0]||(a[0]=[e("h1",{id:"get-the-current-path-string",tabindex:"-1"},[t("Get the current path string "),e("a",{class:"header-anchor",href:"#get-the-current-path-string","aria-label":'Permalink to "Get the current path string"'},"​")],-1),e("p",null,"$paths = @( 'C:\\Windows\\system32', 'C:\\Windows', 'C:\\Windows\\System32\\Wbem', 'C:\\Windows\\System32\\WindowsPowerShell\\v1.0', 'C:\\Program Files', 'C:\\Program Files (x86)', 'C:\\Program Files\\Common Files', 'C:\\DLL\\ncnn-20220216-windows-vs2019\\x64\\bin', 'C:\\pnnx\\ncnn-pnnx\\tools\\pnnx\\build\\install\\bin', 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current\\Bin', 'C:\\Scoop\\shims', 'C:\\Users\\yview\\AppData\\Local\\Microsoft\\WindowsApps', 'C:\\Program Files\\Wireshark', 'C:\\gstreamer\\1.0\\msvc_x86_64\\bin' )",-1),e("h1",{id:"remove-duplicates-and-filter-empty-values",tabindex:"-1"},[t("Remove duplicates and filter empty values "),e("a",{class:"header-anchor",href:"#remove-duplicates-and-filter-empty-values","aria-label":'Permalink to "Remove duplicates and filter empty values"'},"​")],-1),e("p",{$_:"","-and":"","$_.Trim()":""},"$uniquePaths = $paths | Select-Object -Unique | Where-Object",-1),i('<h1 id="merge-into-a-new-path-string" tabindex="-1">Merge into a new path string <a class="header-anchor" href="#merge-into-a-new-path-string" aria-label="Permalink to &quot;Merge into a new path string&quot;">​</a></h1><p>$newPath = $uniquePaths -join &#39;;&#39;</p><h1 id="set-the-new-environment-variable" tabindex="-1">Set the new environment variable <a class="header-anchor" href="#set-the-new-environment-variable" aria-label="Permalink to &quot;Set the new environment variable&quot;">​</a></h1><p>[Environment]::SetEnvironmentVariable(&#39;Path&#39;, $newPath, &#39;Machine&#39;)</p><h1 id="get-the-current-path-string-1" tabindex="-1">get the current path string <a class="header-anchor" href="#get-the-current-path-string-1" aria-label="Permalink to &quot;get the current path string&quot;">​</a></h1><p>$currentPath = [Environment]::GetEnvironmentVariable(&#39;Path&#39;, &#39;Machine&#39;) -split &#39;;&#39;</p><h1 id="display-the-updated-environment-variable-formatted-output" tabindex="-1">Display the updated environment variable (formatted output) <a class="header-anchor" href="#display-the-updated-environment-variable-formatted-output" aria-label="Permalink to &quot;Display the updated environment variable (formatted output)&quot;">​</a></h1><p>Write-Host &quot;更新后的环境变量（按类别分组）：&quot;</p><p>Write-Host &quot;`n系统核心路径：&quot;</p>',9),e("p",{$_:""},[t('$paths | Where-Object { $_ -like "'),e("em",null,"Windows"),t('" } | ForEach-Object')],-1),e("p",null,'Write-Host "`n程序文件路径："',-1),e("p",{$_:""},[t('$paths | Where-Object { $_ -like "'),e("em",null,"Program Files"),t('" } | ForEach-Object')],-1),e("p",null,'Write-Host "`n开发工具路径："',-1),e("p",{$_:""},[t('$paths | Where-Object { $_ -like "'),e("em",null,"Visual Studio"),t('" -or $_ -like "'),e("em",null,"DLL"),t('" -or $_ -like "'),e("em",null,"pnnx"),t('" -or $_ -like "'),e("em",null,"gstreamer"),t('" } | ForEach-Object')],-1),e("p",null,'Write-Host "`n用户应用路径："',-1),e("p",{$_:""},[t('$paths | Where-Object { $_ -like "'),e("em",null,"Users"),t('" -or $_ -like "'),e("em",null,"Scoop"),t('" -or $_ -like "'),e("em",null,"Wireshark"),t('" } | ForEach-Object')],-1)]))}const b=n(l,[["render",s]]);export{v as __pageData,b as default};
